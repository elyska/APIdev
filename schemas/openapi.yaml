openapi: 3.0.0
info:
  version: 1.0.0
  title: E-commerce API
  description: E-commerce API with support for online payments, product and order administration
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://goodvertigo-chariotclarion-3000.codio-box.uk/api/v1'
    description: Development server
tags:
  - name: Users
    description: API endpoints for managing users.
  - name: Products
    description: API endpoints for managing products.
  - name: Categories
    description: API endpoints for managing product categories.
  - name: Orders
    description: API endpoints for managing orders and payments.
paths:
  /users:
    summary: Users of the e-commerce application
    description: This resource represents users of the system.
    get:
      tags:
        - Users
      description:
        View all users
      responses:
        '200':
          description: View of all users excluding password.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/usersAll
        '401':
          description: Non-admin cannot view other users.
    post:
      tags:
        - Users
      description:
        Create a new user account
      requestBody:
        description: User data, no additional properties allowed.
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/userCreate 
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/user
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: User's id
    get:
      tags:
        - Users
      description:
        Get user by id
      responses:
        '200':
          description: View of a user details, excluding password.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userView
        '401':
          description: Non-admin users can only view their own account.
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '404':
          description: User does not exist.
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
    delete:
      tags:
        - Users
      description:
        Delete user by ID
      responses:
        '200':
          description: Delete confirmation.
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '401':
          description: Non-admin users can only delete their own account, admin user cannot delete their account, admin user can delete other accounts.
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '404':
          description: User does not exist.
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
  /users/login:
    post:
      tags:
        - Users
      description:
        Log in to a user account
      requestBody:
        description: User email and password
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/userLogin 
      responses:
        '200':
          description: Logged in successfully
          content:
            application/json:
              schema:
                $ref: ./token.json#/definitions/token
        '400':
          description: Incorrect user details
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
  /users/refresh:
    post:
      tags:
        - Users
      description:
        Refresh token
      requestBody:
        description: Refresh token
        required: true
        content:
          application/json:
            schema:
              $ref: ./token.json#/definitions/tokenRefresh 
      responses:
        '201':
          description: Access token refreshed, new refresh token generated, old refresh token deleted from the database
          content:
            application/json:
              schema:
                $ref: ./token.json#/definitions/token
        '400':
          description: Token not found or invalid
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
  /products:
    description: This resource represents products of the system.
    get:
      tags:
        - Products
      description:
        View all products
      responses:
        '200':
          description: View of all products
          content:
            application/json:
              schema:
                $ref: ./product.json#/definitions/productsAll
    post:
      tags:
        - Products
      description:
        Create a new product
      requestBody:
        description: Product data
        required: true
        content:
          application/json:
            schema:
              $ref: ./product.json#/definitions/productCreate 
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: ./product.json#/definitions/product
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '401':
          description: Only admin users can add new products
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
  /products/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Product id
    get:
      tags:
        - Products
      description:
        View a product by id
      responses:
        '200':
          description: View of a product
          content:
            application/json:
              schema:
                $ref: ./product.json#/definitions/product
        '404':
          description: Product does not exist
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
    put:
      tags:
        - Products
      description:
        Update a product by id
      requestBody:
        description: Product data
        required: true
        content:
          application/json:
            schema:
              $ref: ./product.json#/definitions/productUpdate
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '400':
          description: Product could not be updated
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '401':
          description: Only admin users can update products
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
    delete:
      tags:
        - Products
      description:
        Delete a product by id
      responses:
        '200':
          description: Deletion successful
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '400':
          description: Product could not be deleted
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '401':
          description: Only admin users can delete products
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
  /categories:
    description: This resource represents product categories.
    get:
      tags:
        - Categories
      description:
        View all categories
      responses:
        '200':
          description: View of all categories
          content:
            application/json:
              schema:
                $ref: ./category.json#/definitions/categoriesAll
    post:
      tags:
        - Categories
      description:
        Create a new category
      requestBody:
        description: Category data
        required: true
        content:
          application/json:
            schema:
              $ref: ./category.json#/definitions/categoryCreate 
      responses:
        '201':
          description: Category created
          content:
            application/json:
              schema:
                $ref: ./category.json#/definitions/category
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '401':
          description: Only admin users can add new categories
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
  /categories/{cid}/product/{pid}:
    parameters:
      - in: path
        name: cid
        schema:
          type: integer
        required: true
        description: Category id
      - in: path
        name: pid
        schema:
          type: integer
        required: true
        description: Product id
    post:
      tags:
        - Categories
      description:
        Add a product to a category
      responses:
        '201':
          description: Product added to the category
          content:
            application/json:
              schema:
                $ref: ./category.json#/definitions/categoryItem
        '400':
          description: Product could not be added
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '401':
          description: Only admin users can add products to categories
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
    delete:
      tags:
        - Categories
      description:
        Delete a product from a category
      responses:
        '200':
          description: Deletion successful
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '400':
          description: Category could not be deleted
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '401':
          description: Only admin users can delete categories
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
  /categories/{id}:
    parameters:
      - in: path
        name: cid
        schema:
          type: integer
        required: true
        description: Category id
    get:
      tags:
        - Categories
      description:
        View all products in a category
      responses:
        '200':
          description: View of all products in a category
          content:
            application/json:
              schema:
                $ref: ./category.json#/definitions/categoryProductsAll
    delete:
      tags:
        - Categories
      description:
        Delete a category by id
      responses:
        '200':
          description: Deletion successful
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '400':
          description: Category could not be deleted
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message
        '401':
          description: Only admin users can delete categories
          content:
            application/json:
              schema:
                $ref: ./message.json#/definitions/message